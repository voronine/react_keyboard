{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressKey","handleKeyPress","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,SAAU,IAFd,EAaUC,eAAiB,SAACC,GACxB,EAAKC,SAAS,CACZH,SAAUE,EAAME,OAftB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAmBE,WACE,IAAQD,EAAaO,KAAKR,MAAlBC,SAER,OACE,qBAAKS,UAAU,MAAf,SACGT,EACC,oBAAGS,UAAU,eAAb,sCAGGT,EAHH,OAOA,mBAAGS,UAAU,eAAb,2CAhCV,GAAyBC,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.c09c0b4f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressKey: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    pressKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  private handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({\n      pressKey: event.key,\n    });\n  };\n\n  render() {\n    const { pressKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {pressKey ? (\n          <p className=\"App__message\">\n            The last pressed key is\n            [\n            {pressKey}\n            ]\n          </p>\n        ) : (\n          <p className=\"App__message\">\n            Nothing was pressed yet\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}